/* The following usecases are just examples to give you a hint how to specify them! You may want to change or remove them. */
UseCase ViewQuestionResource {
	reads "QuestionResource.questionContent" "States.questionState" "Types.resourceType" "Tag.tag"
}
UseCase UpdateQuestionResource {
	writes "QuestionResource.questionContent" "States.questionState" "Types.resourceType" "Tag.tag"
}
UseCase ViewTag {
	reads "Tag.name" "TagId.id" "Category.category"
}
UseCase UpdateTag {
	writes "Tag.name" "TagId.id" "Category.category"
}
/* Compatibilities can be used to import all coupling criteria of type Compatability.
 * https://github.com/ServiceCutter/ServiceCutter/wiki/Compatibilities
 * The following compatibilities are just examples to provide you a template! You have to specify or remove them.  */
Compatibilities {
	/* See: https://github.com/ServiceCutter/ServiceCutter/wiki/CC-7-Availability-Criticality */
	AvailabilityCriticality {
		characteristic Normal // Allowed characteristics: Critical, Normal, Low
		"UserId.id" , "TagId.tagId"
	}
	/* See: https://github.com/ServiceCutter/ServiceCutter/wiki/CC-6-Consistency-Criticality */
	ConsistencyCriticality {
		characteristic Eventually // Allowed characteristics: High, Eventually, Weak
		"Category.name" , "Evaluation.score"
	}
	/* See: https://github.com/ServiceCutter/ServiceCutter/wiki/CC-8-Content-Volatility */
	ContentVolatility {
		characteristic Often // Allowed characteristics: Often, Regularly, Rarely
		"QuestionResource.questionContent" , "Category.description"
	}
	/* See: https://github.com/ServiceCutter/ServiceCutter/wiki/CC-15-Security-Criticality */
	SecurityCriticality {
		characteristic Internal // Allowed characteristics: Critical, Internal, Public
		"Tag.name" , "ScoreRule.malusWhenWrong"
	}
	/* See: https://github.com/ServiceCutter/ServiceCutter/wiki/CC-11-Storage-Similarity */
	StorageSimilarity {
		characteristic Normal // Allowed characteristics: Tiny, Normal, Huge
		"QuestionId.questionId" , "QuestionResource.questionContent"
	}
	/* See: https://github.com/ServiceCutter/ServiceCutter/wiki/CC-4-Structural-Volatility */
	StructuralVolatility {
		characteristic Normal // Allowed characteristics: Often, Normal, Rarely
		"User.firstname" , "ScoreRule.malusWhenWrong"
	}
}
/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate "Question" {
	"QuestionResource.questionContent" , "QuestionId.questionId"
}
/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate "Skill" {
	"Tag.name" , "TagId.tagId" , "Category.name" , "Category.description" , "CategoryId.categoryId"
}
/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate "UserWithPreferences" {
}
/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate "QuestionNotification" {
}
/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate "UserAnswer" {
}
/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate "ScoreRule" {
	"ScoreRule.malusWhenWrong" , "ScoreRule.bonusWhenGood"
}
/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate "Exercice" {
	"Evaluation.score"
}
/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate "Stat" {
	"ExerciceUserAndScore.userName" , "ExerciceUserAndScore.score"
}
/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate "Users" {
	"User.firstname" , "User.lastname" , "UserId.id"
}
/* This predefined service is based on your 'QuestionContext' BoundedContext. You do not have to change it. */
PredefinedService "QuestionContext" {
	"QuestionResource.questionContent" , "QuestionId.questionId"
}
/* This predefined service is based on your 'SkillContext' BoundedContext. You do not have to change it. */
PredefinedService "SkillContext" {
	"Tag.name" , "TagId.tagId" , "Category.name" , "Category.description" , "CategoryId.categoryId"
}
/* This predefined service is based on your 'SendQuestionContext' BoundedContext. You do not have to change it. */
PredefinedService "SendQuestionContext" {
}
/* This predefined service is based on your 'UserAnswerContext' BoundedContext. You do not have to change it. */
PredefinedService "UserAnswerContext" {
}
/* This predefined service is based on your 'EvaluationContext' BoundedContext. You do not have to change it. */
PredefinedService "EvaluationContext" {
	"ScoreRule.malusWhenWrong" , "ScoreRule.bonusWhenGood" , "Evaluation.score"
}
/* This predefined service is based on your 'StatContext' BoundedContext. You do not have to change it. */
PredefinedService "StatContext" {
	"ExerciceUserAndScore.userName" , "ExerciceUserAndScore.score"
}
/* This predefined service is based on your 'UserManagementContext' BoundedContext. You do not have to change it. */
PredefinedService "UserManagementContext" {
	"User.firstname" , "User.lastname" , "UserId.id"
}
/* Security Accress Groups cannot be derived from ContextMap. 
 * This is a template/example how you can define them. If you do not want to specify any, remove this block. */
SecurityAccessGroup "SecurityAccessGroupTemplate" {
	"ExerciceUserAndScore.userName" , "ExerciceUserAndScore.score"
}
/* Separated Security Zones cannot be derived from ContextMap. 
 * This is a template/example how you can define them. If you do not want to specify any, remove this block. */
SeparatedSecurityZone "SeparatedSecurityZoneTemplate" {
	"Category.description" , "ExerciceUserAndScore.userName"
}
/* Shared Owner Groups cannot be derived from ContextMap. 
 * This is a template/example how you can define them. If you do not want to specify any, remove this block. */
SharedOwnerGroup "SharedOwnerGroupTemplate" {
	"ExerciceUserAndScore.score" , "CategoryId.categoryId"
}
