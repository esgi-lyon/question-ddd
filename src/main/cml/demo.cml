ContextMap Poller {
	contains SkillContext
	contains UserAnswerContext
	contains SendQuestionContext
	contains UserManagementContext
	contains EvaluationContext
	contains StatContext

	SkillContext [S]->[C] SendQuestionContext

	UserManagementContext [SK]<->[SK] SendQuestionContext

	UserAnswerContext [S]->[C] SendQuestionContext

	UserAnswerContext [SK]<->[SK] UserManagementContext

	SkillContext [S]->[C] UserAnswerContext

	UserAnswerContext [S]->[C] EvaluationContext

	EvaluationContext [S]->[C] StatContext
}

BoundedContext SkillContext {
	Module questionAdmin {
		basePackage = com.esgilyon.questionddd.domain.model
		Aggregate Question {
			Entity QuestionData {
				aggregateRoot
				String questionContent
				- Set<Answer> answers
				- List<Tag> tags
			}
			Entity Answer {
				String answerContent
				boolean isCorrect
				- QuestionData question
			}
		}
	}
	Module questionMeta {
		basePackage = com.esgilyon.questionddd.domain.model
		Aggregate Tag {
			Entity Tag {
				aggregateRoot
				TagId id
				String name
				- Category category
			}
		}
		Aggregate Category {
			Entity Category {
				aggregateRoot
				String name
				String description
				- Category parentCategory
			}
		}
	}
}

BoundedContext SendQuestionContext {
	Module location {
		basePackage = com.esgilyon.questionddd.domain.model
		Aggregate UserWithPreferences {
			Entity UserWithPreferences {
				aggregateRoot
				- @User user
				- List<UserPreferedTag> preferences
			}
			ValueObject UserPreferedTag {
				- @Tag id
			}
		}

		Aggregate TaskSendQuestion {
			Entity Task {
				- TaggedQuestion taggedQuestion
				- @User userId
			}
			ValueObject TaggedQuestion {
				- @QuestionData questionId
				- @Tag tagId
			}
			ValueObject ToUser {
				- @User userId
			}
		}
	}
}

BoundedContext UserAnswerContext {
	Module question {
		basePackage = com.esgilyon.questionddd.domain.model
		Aggregate UserAnswer {
			Entity UserAnswer {
				aggregateRoot
				- @Answer choosenAnswer
				- @User user
			}
		}
	}
}

BoundedContext EvaluationContext {
	Module evaluation {
		basePackage = com.esgilyon.questionddd.domain.model
		Aggregate ScoreRule {
			Entity ScoreRule {
				aggregateRoot
				int malusWhenWrong
				int bonusWhenGood
			}
		}

		Aggregate Exercice {
			Entity Evaluation {
				aggregateRoot
				int score
				- @Status status
				- @UserAnswer userAnswer
			}

			enum Status {
				OPEN,
				DONE
			}
		}
	}
}

BoundedContext StatContext {
	Module stat {
		basePackage = com.esgilyon.questionddd.domain.model
		Aggregate Stat {
			Entity LeaderBoard {
				aggregateRoot
				- List<ExerciceUserAndScore> userScores
			}
			ValueObject ExerciceUserAndScore {
				String userName
				int score
			}
		}
	}
}

BoundedContext UserManagementContext {
	Module user {
		Aggregate Users {
			Entity User {
				aggregateRoot
				String firstname
				String lastname
			}
		}
	}
}
