/* The DDD Cargo sample application modeled in CML. Note that we split the application into multiple bounded contexts. */
ContextMap Poller {
	contains SkillContext
	contains UserAnswerContext
	contains SendQuestionContext
	contains UserManagementContext
	contains EvaluationContext

	SkillContext [SK]<->[SK] UserAnswerContext

	SkillContext [SK]<->[SK] SendQuestionContext

	UserManagementContext [SK]<->[SK] SendQuestionContext

	UserAnswerContext [D]<-[U,OHS,PL] SendQuestionContext

	UserAnswerContext [D]<-[U,OHS,PL] UserManagementContext

	UserAnswerContext [D]<-[U,OHS,PL] EvaluationContext

}

/* The original booking application context */
BoundedContext SkillContext {
	Module questionAdmin {
		basePackage = com.esgilyon.questionddd.domain.model

		Aggregate Question {
			Entity QuestionData {
				aggregateRoot
				AnswerId id
				String questionContent
				- Set<Answer> answers
				- List<Tag> tags
			}
			Entity Answer {
				AnswerId id
				String answerContent
				boolean isCorrect
			}
		}
	}

	Module questionMeta {
		basePackage = com.esgilyon.questionddd.domain.model

		Aggregate Tag {
			Entity Tag {
				aggregateRoot
				TagId id
				String name
				- Category category
			}
		}

		Aggregate Category {
			Entity Category {
				aggregateRoot
				String name
				- Category parentCategory
			}
		}
	}
}

/* Separate bounded context for managing the locations. */
BoundedContext SendQuestionContext {
	Module location {
		basePackage = com.esgilyon.questionddd.domain.model

		Aggregate UserWithPreferences {
			Entity UserWithPreferences {
				aggregateRoot
				- @User user
				- List<UserPreferedTag> preferences
			}
			ValueObject UserPreferedTag {
				- @Tag id
			}
		}

		Aggregate TaskSendQuestion {
			Entity Task {
				- @QuestionData taggedQuestion
				- @User userId
			}
			ValueObject TaggedQuestion {
				QuestionId questionId
				- @Tag tagId
			}
			ValueObject ToUser {
				- @User userId
			}
		}
	}
}

BoundedContext UserAnswerContext {
	Module question {
		basePackage = com.esgilyon.questionddd.domain.model

		Aggregate UserAnswer {
			Entity UserAnswer {
				aggregateRoot
				- AnsweredQuestion answeredQuestion
				- ChoosenAnswer choosenAnswer
				- AnsweringUser answeringUser
			}
			ValueObject AnsweredQuestion {
				- @QuestionData questionId
			}
			ValueObject ChoosenAnswer {
				- @Answer answer
				boolean isCorrect
			}
			ValueObject AnsweringUser {
				- @User user
			}
		}
	}
}

BoundedContext EvaluationContext {
	Module evaluation {
		basePackage = com.esgilyon.questionddd.domain.model

		Aggregate ScoreRule {
			Entity ScoreRule {
				aggregateRoot
				int pointsIncrementor
			}
		}
	}
}

BoundedContext UserManagementContext {
	Module user {
		Aggregate Users {
			Entity User { 
				aggregateRoot
				
				String firstname
				String lastname
			}
		}
	}
}
